from fastapi import APIRouter, HTTPException
from services.llm_service import ask_llm
from services.atoma import ask_atoma
from services.chatgpt import ask_chatgpt

router = APIRouter()

@router.post("/chat")
def chat(input_text: str, portfolio: dict):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ LLM (–∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏) —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ"""
    try:
        # –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        print(f"üîπ –í—Ö–æ–¥–Ω–æ–π —Ç–µ–∫—Å—Ç: {input_text}")
        print(f"üìä –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ: {portfolio}")

        # –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        #return {"portfolio": portfolio}

        # –ü–æ–∑–∂–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å portfolio –≤ LLM
        response = ask_llm(input_text, portfolio)
        return {"response": response}
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

@router.post("/chat/atoma")
def chat_atoma(input_text: str):
    """–ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ Atoma"""
    try:
        response = ask_atoma(input_text)
        return {"response": response}
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

@router.post("/chat/chatgpt")
def chat_chatgpt(input_text: str):
    """–ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ ChatGPT"""
    try:
        response = ask_chatgpt(input_text)
        return {"response": response}
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))
